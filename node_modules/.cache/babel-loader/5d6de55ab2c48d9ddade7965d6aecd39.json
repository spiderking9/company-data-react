{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\React\\\\react-first-project\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      date: []\n    };\n  }\n\n  IdFetch() {\n    fetch('https://recruitment.hal.skygate.io/companies').then(data => data.json()).then(resp => {\n      resp.forEach(company => {\n        return {\n          id: company.id,\n          name: company.name,\n          city: company.city\n        };\n      });\n    });\n  }\n\n  IncomesFetch() {\n    let dataFetch = this.IdFetch();\n    fetch('https://recruitment.hal.skygate.io/incomes/' + dataFetchid).then(data => data.json()).then(response => {\n      let income = Math.round(response.incomes.reduce((a, b) => a + parseFloat(b.value), 0) * 100) / 100;\n      let average = Math.round(income / 49 * 100) / 100;\n      let lastMonth = Math.round(response.incomes.map(id => parseFloat(id.date.substring(5, 7)) === presentMonth ? id.value : 0).reduce((a, b) => {\n        return a + parseFloat(b);\n      }, 0) * 100) / 100;\n      companyDate.push({\n        id,\n        name,\n        city,\n        income,\n        average,\n        lastMonth\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.state.data.map(el => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, el.name, \": \", el.price_usd))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/React/react-first-project/src/App.js"],"names":["React","Component","ReactDOM","App","constructor","state","date","IdFetch","fetch","then","data","json","resp","forEach","company","id","name","city","IncomesFetch","dataFetch","dataFetchid","response","income","Math","round","incomes","reduce","a","b","parseFloat","value","average","lastMonth","map","substring","presentMonth","companyDate","push","render","el","price_usd"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AACD;;AAEDC,EAAAA,OAAO,GAAG;AACRC,IAAAA,KAAK,CAAC,8CAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAC2BF,IAD3B,CACgCG,IAAI,IAAI;AACpCA,MAAAA,IAAI,CAACC,OAAL,CAAaC,OAAO,IAAI;AACpB,eAAO;AAACC,UAAAA,EAAE,EAAED,OAAO,CAACC,EAAb;AAAgBC,UAAAA,IAAI,EAACF,OAAO,CAACE,IAA7B;AAAkCC,UAAAA,IAAI,EAACH,OAAO,CAACG;AAA/C,SAAP;AACH,OAFD;AAGH,KALD;AAMD;;AACDC,EAAAA,YAAY,GAAE;AACZ,QAAIC,SAAS,GAAC,KAAKZ,OAAL,EAAd;AACAC,IAAAA,KAAK,CAAC,gDAAgDY,WAAjD,CAAL,CAAmEX,IAAnE,CAAwEC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAAhF,EAA6FF,IAA7F,CAAkGY,QAAQ,IAAI;AAC5G,UAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,OAAT,CAAiBC,MAAjB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGE,UAAU,CAACD,CAAC,CAACE,KAAH,CAAhD,EAA2D,CAA3D,IAAgE,GAA3E,IAAkF,GAA/F;AACA,UAAIC,OAAO,GAAGR,IAAI,CAACC,KAAL,CAAYF,MAAM,GAAG,EAAV,GAAgB,GAA3B,IAAkC,GAAhD;AACA,UAAIU,SAAS,GAAGT,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,OAAT,CAAiBQ,GAAjB,CAAsBlB,EAAD,IAAQc,UAAU,CAACd,EAAE,CAACT,IAAH,CAAQ4B,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAAD,CAAV,KAAwCC,YAAxC,GAAuDpB,EAAE,CAACe,KAA1D,GAAkE,CAA/F,EAAkGJ,MAAlG,CAAyG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1I,eAAOD,CAAC,GAAGE,UAAU,CAACD,CAAD,CAArB;AACH,OAF0B,EAExB,CAFwB,IAEnB,GAFQ,IAED,GAFf;AAGAQ,MAAAA,WAAW,CAACC,IAAZ,CAAiB;AAAEtB,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA,IAAZ;AAAkBK,QAAAA,MAAlB;AAA0BS,QAAAA,OAA1B;AAAmCC,QAAAA;AAAnC,OAAjB;AACH,KAPC;AAQD;;AAGDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjC,KAAL,CAAWK,IAAX,CAAgBuB,GAAhB,CAAoBM,EAAE,IACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,EAAE,CAACvB,IADN,QACcuB,EAAE,CAACC,SADjB,CADD,CADH,CADF,CADF;AAWD;;AAvCyB;;AAyC5B,eAAerC,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { date: []};\n  }\n\n  IdFetch() {\n    fetch('https://recruitment.hal.skygate.io/companies')\n    .then(data => data.json()).then(resp => {\n        resp.forEach(company => {\n            return {id: company.id,name:company.name,city:company.city};\n        });\n    });\n  }\n  IncomesFetch(){\n    let dataFetch=this.IdFetch();\n    fetch('https://recruitment.hal.skygate.io/incomes/' + dataFetchid).then(data => data.json()).then(response => {\n      let income = Math.round(response.incomes.reduce((a, b) => a + parseFloat(b.value), 0) * 100) / 100;\n      let average = Math.round((income / 49) * 100) / 100;\n      let lastMonth = Math.round(response.incomes.map((id) => parseFloat(id.date.substring(5, 7)) === presentMonth ? id.value : 0).reduce((a, b) => {\n          return a + parseFloat(b);\n      }, 0) * 100) / 100;\n      companyDate.push({ id, name, city, income, average, lastMonth });\n  });\n  }\n\n\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.state.data.map(el => (\n            <li>\n              {el.name}: {el.price_usd}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}