{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\React\\\\react-first-project\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nasync function IdFetch() {\n  await fetch('https://recruitment.hal.skygate.io/companies').then(data => data.json()).then(resp => {\n    resp.forEach(company => {\n      return {\n        id: company.id,\n        name: company.name,\n        city: company.city\n      };\n    });\n  });\n}\n\n;\nvar companyDate = [];\n\nasync function IncomesFetch() {\n  let dataFetch = this.IdFetch();\n  await fetch('https://recruitment.hal.skygate.io/incomes/' + dataFetch.id).then(data => data.json()).then(response => {\n    let income = Math.round(response.incomes.reduce((a, b) => a + parseFloat(b.value), 0) * 100) / 100;\n    let lastMonth = Math.round(response.incomes.map(id => parseFloat(id.date.substring(5, 7)) === parseFloat(new Date().getMonth() + 1) ? id.value : 0).reduce((a, b) => {\n      return a + parseFloat(b);\n    }, 0) * 100) / 100;\n    this.companyDate.push([dataFetch.id, dataFetch.name, dataFetch.city, income, Math.round(income / 49 * 100) / 100, Math.round(response.incomes.map(id => parseFloat(id.date.substring(5, 7)) === parseFloat(new Date().getMonth() + 1) ? id.value : 0).reduce((a, b) => {\n      return a + parseFloat(b);\n    }, 0) * 100) / 100]);\n  });\n}\n\n;\n\nasync function yyy() {\n  return companyDate.length;\n}\n\nlet Xxx = () => {\n  console.log(\"this.companyDate \" + yyy);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" dfsd  \");\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      date: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Xxx, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/React/react-first-project/src/App.js"],"names":["React","Component","ReactDOM","IdFetch","fetch","then","data","json","resp","forEach","company","id","name","city","companyDate","IncomesFetch","dataFetch","response","income","Math","round","incomes","reduce","a","b","parseFloat","value","lastMonth","map","date","substring","Date","getMonth","push","yyy","length","Xxx","console","log","App","constructor","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nasync function IdFetch() {\n  await fetch('https://recruitment.hal.skygate.io/companies')\n  .then(data => data.json()).then(resp => {\n      resp.forEach(company => {\n          return {id: company.id,name:company.name,city:company.city};\n      });\n  });\n};\nvar companyDate=[];\nasync function IncomesFetch(){\n  let dataFetch=this.IdFetch();\n  \n  await fetch('https://recruitment.hal.skygate.io/incomes/' + dataFetch.id).then(data => data.json()).then(response => {\n    let income = Math.round(response.incomes.reduce((a, b) => a + parseFloat(b.value), 0) * 100) / 100;\n    let lastMonth = Math.round(response.incomes.map((id) => parseFloat(id.date.substring(5, 7)) === parseFloat(new Date().getMonth() + 1) ? id.value : 0).reduce((a, b) => {\n        return a + parseFloat(b);\n    }, 0) * 100) / 100;\n    this.companyDate.push([dataFetch.id, dataFetch.name, dataFetch.city, income, Math.round((income / 49) * 100) / 100, Math.round(response.incomes.map((id) => parseFloat(id.date.substring(5, 7)) === parseFloat(new Date().getMonth() + 1) ? id.value : 0).reduce((a, b) => {\n      return a + parseFloat(b);\n  }, 0) * 100) / 100 ]);\n});\n};\nasync function yyy(){\n  return companyDate.length;\n}\n\nlet Xxx = () => { \n  console.log(\"this.companyDate \" +yyy );\n  return (\n  <div> dfsd  </div>\n  ); \n };\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { date: []};\n  }\n  render() {\n    return (\n      <div>\n          <Xxx />\n      \n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}