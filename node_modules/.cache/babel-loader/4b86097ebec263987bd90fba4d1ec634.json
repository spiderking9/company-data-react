{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\React\\\\react-first-project\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction IdFetch() {\n  fetch('https://recruitment.hal.skygate.io/companies').then(data => data.json()).then(resp => {\n    resp.forEach(company => {\n      return {\n        id: company.id,\n        name: company.name,\n        city: company.city\n      };\n    });\n  });\n}\n\n;\n\nfunction IncomesFetch() {\n  let dataFetch = this.IdFetch();\n  let companyDate = [];\n  fetch('https://recruitment.hal.skygate.io/incomes/' + dataFetch.id).then(data => data.json()).then(response => {\n    let income = Math.round(response.incomes.reduce((a, b) => a + parseFloat(b.value), 0) * 100) / 100;\n    let lastMonth = Math.round(response.incomes.map(id => parseFloat(id.date.substring(5, 7)) === parseFloat(new Date().getMonth() + 1) ? id.value : 0).reduce((a, b) => {\n      return a + parseFloat(b);\n    }, 0) * 100) / 100;\n    companyDate.push([dataFetch.id, dataFetch.name, dataFetch.city, income, Math.round(income / 49 * 100) / 100, Math.round(response.incomes.map(id => parseFloat(id.date.substring(5, 7)) === parseFloat(new Date().getMonth() + 1) ? id.value : 0).reduce((a, b) => {\n      return a + parseFloat(b);\n    }, 0) * 100) / 100]);\n  });\n  return this.setState({\n    data: companyDate\n  });\n}\n\n;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      date: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"dgfdf\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/React/react-first-project/src/App.js"],"names":["React","Component","ReactDOM","IdFetch","fetch","then","data","json","resp","forEach","company","id","name","city","IncomesFetch","dataFetch","companyDate","response","income","Math","round","incomes","reduce","a","b","parseFloat","value","lastMonth","map","date","substring","Date","getMonth","push","setState","App","constructor","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction IdFetch() {\n  fetch('https://recruitment.hal.skygate.io/companies')\n  .then(data => data.json()).then(resp => {\n      resp.forEach(company => {\n          return {id: company.id,name:company.name,city:company.city};\n      });\n  });\n};\nfunction IncomesFetch(){\n  let dataFetch=this.IdFetch();\n  let companyDate=[];\n  fetch('https://recruitment.hal.skygate.io/incomes/' + dataFetch.id).then(data => data.json()).then(response => {\n    let income = Math.round(response.incomes.reduce((a, b) => a + parseFloat(b.value), 0) * 100) / 100;\n    let lastMonth = Math.round(response.incomes.map((id) => parseFloat(id.date.substring(5, 7)) === parseFloat(new Date().getMonth() + 1) ? id.value : 0).reduce((a, b) => {\n        return a + parseFloat(b);\n    }, 0) * 100) / 100;\n    companyDate.push([dataFetch.id, dataFetch.name, dataFetch.city, income, Math.round((income / 49) * 100) / 100, Math.round(response.incomes.map((id) => parseFloat(id.date.substring(5, 7)) === parseFloat(new Date().getMonth() + 1) ? id.value : 0).reduce((a, b) => {\n      return a + parseFloat(b);\n  }, 0) * 100) / 100 ]);\n});\nreturn this.setState({data:companyDate});\n};\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { date: []};\n  }\n  render() {\n    return (\n      <div>\n        <ul>\n          dgfdf\n        </ul>\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}